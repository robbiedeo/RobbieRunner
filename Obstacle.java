package Sprites;

import java.awt.geom.Rectangle2D;
import java.util.Random;

import visual.dynamic.described.RuleBasedSprite;
import visual.statik.TransformableContent;

public class Obstacle extends RuleBasedSprite
{

  protected double initialSpeed, maxX, maxY, speed, x, y;
  private int state = 0;
  private TransformableContent[] contents;

  private static final int INITIAL_LOCATION = 250;
  private static final Random rng = new Random();

  public Obstacle(TransformableContent[] contents, double width, double height, double speed)
  {
    super(contents[0]);

    maxX = width;
    maxY = height;

    this.initialSpeed = speed;
    this.speed = speed;

    this.x = (1.0 / 8.0) * width;
    this.y = (height / 3.0) + 50;

    this.contents = contents;

    setLocation(x, y);
  }

  /**
   * Handle a tick event (generated by the Stage)
   *
   * @param time
   *          The current time (which is not used)
   */
  public void handleTick(int time)
  {
    updateLocation();
  }

  public TransformableContent getContent()
  {
    return contents[state];

  }

  /**
   * Update the location
   */
  protected void updateLocation()
  {
    x -= speed;
    int min = 1;
    int max = 3;

    int min2 = 0;
    int max2 = 3;

    if (x < -50)
    {
      x = (int) maxX;
      y = INITIAL_LOCATION;
      speed = rng.nextInt((max - min) + 1 + min) * initialSpeed;

      while (speed == 0)
      {
        speed = rng.nextInt((max - min) + 1 + min) * initialSpeed;
      }

      state = rng.nextInt((max2 - min2) + 1) + min2;
    }

    // Set the location
    setLocation(x, y);
  }

}
